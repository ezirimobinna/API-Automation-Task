{
	"info": {
		"_postman_id": "530a793a-f207-4e49-963c-a775304abef7",
		"name": "API_Automation_Task",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test1: To confirm test status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm the body response\r",
									"pm.test(\"Body response has a content\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"rel\",\"root\",\r",
									"    \"href\", \"https://demo.fusio-project.org/\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/index.php/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"index.php",
								""
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				},
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test1: To confirm test status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm the body response\r",
									"pm.test(\"Body response has a content\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\",\"3\",\r",
									"            \"status\", \"1\",\r",
									"            \"title\", \"Task 3\",\r",
									"            \"insertDate\", \"2021-02-13 22:15:17\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/index.php/todo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"index.php",
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get entry per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test1: To confirm test status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code has OK has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm the body response\r",
									"pm.test(\"Body response has a content\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\",\"1\",\"status\"\r",
									",\"1\",\"title\", \"Task 1\",\"insertDate\", \"2021-02-13 22:15:17\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/index.php/todo/?todo_id=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"index.php",
								"todo",
								""
							],
							"query": [
								{
									"key": "todo_id",
									"value": "2"
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create new Entry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test1: To confirm POST request was successful\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm the body response\r",
									"pm.test(\"title\", \"Task 1\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"insertDate\",2020-04-10,15,58,27)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"1\",\n    \"status\": \"1\",\n    \"title\": \"Task 1\",\n    \"insertDate\": \"2020-04-10 15:58:27\"\n}"
						},
						"url": {
							"raw": "{{Base_url}}api/users",
							"host": [
								"{{Base_url}}api"
							],
							"path": [
								"users"
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo"
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete a todo per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test1: To confirm test status code\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//Test2: To confirm status code has the right string\r",
									"pm.test(\"Status code has No Content has string\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"//Test3: To confirm the body response\r",
									"pm.test(\"\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_url}}api/users/2",
							"host": [
								"{{Base_url}}api"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}